generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model customer {
  customer_id         BigInt    @id @default(autoincrement())
  created_at          DateTime  @default(now()) @db.Timestamp(6)
  updated_at          DateTime  @default(now()) @db.Timestamp(6)
  company_name        String?   @db.VarChar(50)
  vat_no              String?   @db.VarChar(50)
  project_description String?
  country             String?   @db.VarChar(50)
  project             project[]
}

model project {
  project_id          BigInt       @id @default(autoincrement())
  created_at          DateTime     @default(now()) @db.Timestamp(6)
  updated_at          DateTime     @default(now()) @db.Timestamp(6)
  project_description String?
  team_member_id      BigInt?
  customer_id         BigInt?
  customer            customer?    @relation(fields: [customer_id], references: [customer_id], onDelete: NoAction, onUpdate: NoAction)
  team_member         team_member? @relation(fields: [team_member_id], references: [team_member_id], onDelete: NoAction, onUpdate: NoAction)
}

model team_member {
  team_member_id       BigInt         @id @default(autoincrement())
  created_at           DateTime       @default(now()) @db.Timestamp(6)
  upadted_at           DateTime       @default(now()) @db.Timestamp(6)
  email                String         @unique @db.VarChar(50)
  password             String         @db.VarChar(255)
  active               Boolean        @default(false)
  active_token         String         @unique @db.VarChar(255)
  activate_expire_date BigInt
  project              project[]
  reset_tokens         reset_tokens[]
}

model reset_tokens {
  reset_token_id    BigInt       @id @default(autoincrement())
  token             String       @unique @db.VarChar(255)
  token_expire_date BigInt
  team_member_id    BigInt       @unique
  team_member       team_member? @relation(fields: [team_member_id], references: [team_member_id], onDelete: Cascade, onUpdate: Cascade)
}
